
@page "/views/board"

@attribute [Route(Shared.Routes.Blazor.Views.BoardView)]

<!-- NOTE: CSS isolation does not work, so using inline -->
<style>

  div.color-white {
    height: 100px;
    width: 100px;
    background-color: #fff;
  }

  div.color-black {
    height: 100px;
    width: 100px;
    background-color: #000;
  }

  div.board-grid {
    height: 800px;
    width: 800px;
    box-sizing: border-box;
    border: 1px solid #000;
    margin: 0 auto;
  }

  div.board-row {
    height: 100px;
    width: 800px;
    display: flex;
  }

  b.board-columns {
  }

  p.column-letter {
  }

</style>

<div id="board-gird">
  @for (int y = 0; y < BoardDimensions.Y; ++y)
  {
    <div id="row-@y" class="board-row">
      @for (int x = 0; x < BoardDimensions.X; ++x)
      {
        <div id="column-@x" class="board-column @GetCellColor(x, y)"></div>
      }
    </div>
  }
</div>

@code {

  PieceBase[,] BoardPieces = new PieceBase[0,0];
  (int X, int Y) BoardDimensions = (8, 8);

  [Parameter]
  public required Sets Set { get; set; }

  protected override async Task OnInitializedAsync()
  {
    BoardPieces = BoardHelpers.GetDefaultBoard(Set);

    StateHasChanged();
  }

  string GetCellColor(int x, int y)
  {
    throw new NotImplementedException();
  }
}